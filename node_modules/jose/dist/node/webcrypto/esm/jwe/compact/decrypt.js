import decrypt from '../flattened/decrypt.js';
import { JWEInvalid } from '../../util/errors.js';
export default async function compactDecrypt(jwe, key, options) {
    if (typeof jwe !== 'string') {
        throw new JWEInvalid('Compact JWE must be a string');
    }
    const { 0: protectedHeader, 1: encryptedKey, 2: iv, 3: ciphertext, 4: tag, length } = jwe.split('.');
    if (length !== 5) {
        throw new JWEInvalid('Invalid Compact JWE');
    }
    const decrypted = await decrypt({
        ciphertext,
        iv,
        protected: protectedHeader,
        tag,
        ...(encryptedKey ? { encrypted_key: encryptedKey } : undefined),
    }, key, options);
    return { plaintext: decrypted.plaintext, protectedHeader: decrypted.protectedHeader };
}
